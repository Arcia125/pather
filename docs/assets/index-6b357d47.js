var A=Object.defineProperty;var P=(t,e,i)=>e in t?A(t,e,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[e]=i;var a=(t,e,i)=>(P(t,typeof e!="symbol"?e+"":e,i),i);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))o(n);new MutationObserver(n=>{for(const r of n)if(r.type==="childList")for(const c of r.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&o(c)}).observe(document,{childList:!0,subtree:!0});function i(n){const r={};return n.integrity&&(r.integrity=n.integrity),n.referrerPolicy&&(r.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?r.credentials="include":n.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function o(n){if(n.ep)return;n.ep=!0;const r=i(n);fetch(n.href,r)}})();class N{constructor(e=null,i){a(this,"g",0);a(this,"h",0);a(this,"equals",e=>N.equals(this,e));this.parent=e,this.position=i}static equals(e,i){return!e.position||!i.position?!1:e.x===i.x&&e.y===i.y}get f(){return this.g+this.h}get x(){return this.position.x}set x(e){this.position.x=e}get y(){return this.position.y}set y(e){this.position.y=e}}const k=t=>{const e=[];let i=t;for(;i.parent;)e.push(i),i=i.parent;return e},C=(t,e=!1)=>{const i=t.x,o=t.y;let n=[{x:0,y:-1},{x:0,y:1},{x:-1,y:0},{x:1,y:0}];return e&&(n=n.concat([{x:-1,y:-1},{x:1,y:-1},{x:-1,y:1},{x:1,y:1}])),n.map(r=>new N(t,{x:i+r.x,y:o+r.y}))},F={DEFAULT:(t,e)=>Math.abs(t.x-e.x)+Math.abs(t.y-e.y)},O={DEFAULT:(t,e)=>t.equals(e)},R=99999;class M{constructor(e){a(this,"possibleNodes");a(this,"checkedNodes");a(this,"start");a(this,"end");a(this,"iterations");a(this,"config");a(this,"initialState",()=>{const i=new N(null,this.config.startPos),o=new N(null,this.config.endPos),n=[],r=[];return n.push(i),{iterations:0,start:i,end:o,possibleNodes:n,checkedNodes:r}});a(this,"findPath",()=>{if(this.iterations!==0){const{start:e,end:i,iterations:o,possibleNodes:n,checkedNodes:r}=this.initialState();this.possibleNodes=n,this.checkedNodes=r,this.start=e,this.end=i,this.iterations=o}for(;this.possibleNodes.length;){if(this.iterations>=this.config.maxIterations)return;const e=this.checkNode();if(e!=null&&e.path)return e.path;this.iterations++}});a(this,"checkNode",()=>{this.possibleNodes.sort((o,n)=>n.f-o.f);const e=this.possibleNodes.pop();if(!e)return;if(this.checkedNodes.push(e),this.config.isDone(e,this.end))return{path:k(e).reverse()};const i=C(e,this.config.diagonal);for(let o of i)this.config.isOutOfBounds(o)||this.config.wouldCollide(o)||this.possibleNodes.filter(n=>n.equals(o)).length>0||this.checkedNodes.filter(n=>n.equals(o)).length>0||(o.g=e.g+1,o.h=this.config.heuristic(o,this.end),this.possibleNodes.push(o))});this.config={...e,heuristic:e.heuristic||F.DEFAULT,diagonal:e.diagonal||!1,maxIterations:e.maxIterations||R,isDone:e.isDone||O.DEFAULT};const{start:i,end:o,iterations:n,possibleNodes:r,checkedNodes:c}=this.initialState();this.possibleNodes=r,this.checkedNodes=c,this.start=i,this.end=o,this.iterations=n}*findPathGen(){if(this.iterations!==0){const{start:e,end:i,iterations:o,possibleNodes:n,checkedNodes:r}=this.initialState();this.possibleNodes=n,this.checkedNodes=r,this.start=e,this.end=i,this.iterations=o}for(;this.possibleNodes.length;){if(this.iterations>=this.config.maxIterations)return;const e=this.checkNode();if(this.iterations++,yield{solution:e,aStar:this},e!=null&&e.path)return}}}class b{constructor(e,i){a(this,"element");a(this,"onChange",e=>{this.element.addEventListener("change",e)});if(this.element=document.querySelector(e),!this.element)throw new Error(`missing button ${e}`);this.onChange(i)}}class p{constructor(e,i){a(this,"element");a(this,"onClick",e=>{this.element.addEventListener("click",e)});if(this.element=document.querySelector(e),!this.element)throw new Error(`missing button ${e}`);this.onClick(i)}}const f={START:"#05998c",END:"#990512",PATH:"#b3e0dc",CHECKED:"#5C9905",POSSIBLE:"#420599",WALL:"#0f0f0f",GRID:"#025043"},v={lastFrameTimeMs:0,maxFPS:60,frameID:0,stepID:0,delta:0,framesThisSecond:0,lastFpsUpdate:0,fps:0,resetDeltaCount:0,timeStep:1e3/60};let U=!1,q=0;const l={NOTHING:0,WALL:1,START:2,END:3},S=t=>{for(let e=0;e<s.grid.length;e++){const i=s.grid[e];for(let o=0;o<i.length;o++)if(i[o]===t)return{x:o,y:e}}throw new Error(`${t} not found`)},G=()=>[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,0,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,0,1,1,1,1,0,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,0,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,0,1,0,0,0,l.START,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,l.END]],s={time:v,running:U,pathIndex:q,speed:.01,diagonal:!1,placing:l.WALL,grid:G()},L=()=>new M({startPos:S(l.START),endPos:S(l.END),diagonal:s.diagonal,wouldCollide:t=>s.grid[t.y][t.x]===1,isOutOfBounds:t=>{var e,i;return typeof((i=(e=s.grid)==null?void 0:e[t.y])==null?void 0:i[t.x])>"u"}});let y=L(),I=y.findPathGen(),h={done:!1,value:{aStar:y,solution:void 0}};var E;let m=(E=h.value)==null?void 0:E.solution;const w=()=>{s.pathIndex=0,s.running=!1,y=L(),I=y.findPathGen(),h={done:!1,value:{aStar:y,solution:void 0}}};let x=0;const H=t=>{var e;if(!h.done&&Math.abs(t-x)>s.speed){let i=I.next();i.done||(h=i,x=t)}!h.done&&h.value&&(m=(e=h.value)==null?void 0:e.solution),m&&m.path&&s.pathIndex<m.path.length&&Math.abs(t-x)>s.speed/2&&(s.path=m.path,s.pathIndex++,x=t)},W=()=>{s.time.resetDeltaCount++,s.time.delta=0},D=t=>Math.min(t.width,t.height)/s.grid.length,z=(t,e)=>{let i=0;for(let o of s.grid){let n=0;for(let r of o)g(t,e,{x:n,y:i,...r===1?{fill:f.WALL,stroke:f.GRID}:{stroke:f.GRID}}),n++;i++}t.closePath()},g=(t,e,i)=>{t.beginPath();const o=D(e);i.fill&&(t.fillStyle=i.fill),i.stroke&&(t.strokeStyle=i.stroke),t.rect(i.x*o,i.y*o,o,o),i.fill&&t.fill(),i.stroke&&t.stroke(),t.closePath()},B=(t,e)=>{const i=S(l.START);g(t,e,{x:i.x,y:i.y,fill:f.START})},K=(t,e)=>{const i=S(l.END);g(t,e,{x:i.x,y:i.y,fill:f.END})},_=(t,e)=>{if(!s.path){console.warn("no state.path");return}for(let i=0;i<s.pathIndex;i++){const o=s.path[i].position;g(t,e,{x:o.x,y:o.y,fill:f.PATH})}},$=(t,e)=>{var i,o;for(let n of((i=h.value)==null?void 0:i.aStar.possibleNodes)||[])n&&g(t,e,{x:n.x,y:n.y,fill:f.POSSIBLE});for(let n of((o=h.value)==null?void 0:o.aStar.checkedNodes)||[])n&&g(t,e,{x:n.x,y:n.y,fill:f.CHECKED})},X=(t,e)=>{t.beginPath(),t.fillStyle="#fff",t.rect(0,0,e.width,e.height),t.fill(),t.closePath(),t.beginPath(),t.fillStyle="#000",z(t,e),$(t,e),_(t,e),B(t,e),K(t,e)},Y=(t,e)=>{if(!t)throw new Error("Missing canvas context");const i=o=>{if(o<s.time.lastFrameTimeMs+1e3/s.time.maxFPS){s.time.stepID=window.requestAnimationFrame(i);return}if(s.running){s.time.delta+=o-s.time.lastFrameTimeMs,s.time.lastFrameTimeMs=o,o>s.time.lastFpsUpdate+1e3&&(s.time.fps=.25*s.time.framesThisSecond+.75*s.time.fps,s.time.lastFpsUpdate=o,s.time.framesThisSecond=0),s.time.framesThisSecond++;let n=0;for(;s.time.delta>=s.time.timeStep;)if(H(o),s.time.delta-=s.time.timeStep,++n>=240){W();break}}else s.time.lastFrameTimeMs=o;s.time.frameID++,X(t,e),s.time.stepID=window.requestAnimationFrame(i)};i(1)},j=()=>{const t=document.querySelector("#main-demo-canvas"),e=t.getContext("2d");new p("#reset-button",()=>{w()}),new p("#start-button",()=>{w(),s.running=!0}),new p("#place-start-button",()=>{s.placing=l.START}),new p("#place-end-button",()=>{s.placing=l.END}),new p("#clear-button",()=>{for(let n=0;n<s.grid.length;n++){const r=s.grid[n];for(let c=0;c<r.length;c++)s.grid[n][c]=l.NOTHING}s.grid[0][0]=l.START,s.grid[s.grid.length-1][s.grid[0].length-1]=l.END,w()});const i=new b("#diagonal-checkbox",n=>{s.diagonal=n.target.checked});if(new b("#speed-slider",n=>{s.speed=1e3-parseInt(n.target.value)}),i.element.checked=s.diagonal,!e)throw new Error("no context found");const o=()=>{t.width=window.innerWidth,t.height=window.innerHeight,e.msImageSmoothingEnabled=!1,e.mozImageSmoothingEnabled=!1,e.imageSmoothingEnabled=!1};o(),window.addEventListener("resize",()=>{o()}),t.addEventListener("click",n=>{const r=t.getBoundingClientRect(),c={x:n.clientX-r.left,y:n.clientY-r.top},T=D(t),d={x:Math.floor(c.x/T),y:Math.floor(c.y/T)};if(s.placing===l.WALL)s.grid[d.y][d.x]=s.grid[d.y][d.x]===l.WALL?l.NOTHING:l.WALL;else{const u=S(s.placing);s.grid[d.y][d.x]===l.END&&s.placing===l.START?s.grid[u.y][u.x]=l.END:s.grid[d.y][d.x]===l.START&&s.placing===l.END?s.grid[u.y][u.x]=l.START:s.grid[u.y][u.x]=l.NOTHING,s.grid[d.y][d.x]=s.placing,s.placing=l.WALL}w()}),Y(e,t)};j();
