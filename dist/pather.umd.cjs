(function(o,s){typeof exports=="object"&&typeof module<"u"?s(exports):typeof define=="function"&&define.amd?define(["exports"],s):(o=typeof globalThis<"u"?globalThis:o||self,s(o.pather={}))})(this,function(o){"use strict";var g=Object.defineProperty;var N=(o,s,a)=>s in o?g(o,s,{enumerable:!0,configurable:!0,writable:!0,value:a}):o[s]=a;var r=(o,s,a)=>(N(o,typeof s!="symbol"?s+"":s,a),a);class s{constructor(t=null,i){r(this,"g",0);r(this,"h",0);r(this,"equals",t=>s.equals(this,t));this.parent=t,this.position=i}static equals(t,i){var e,h,c,l;return!t.position||!i.position?!1:((e=t.position)==null?void 0:e.x)===((h=i.position)==null?void 0:h.x)&&((c=t.position)==null?void 0:c.y)===((l=i.position)==null?void 0:l.y)}get f(){return this.g+this.h}}const a=n=>{const t=[];let i=n;for(;i.parent;)t.push(i),i=i.parent;return t},u=(n,t=!1)=>{const i=n.position.x,e=n.position.y;let h=[{x:0,y:-1},{x:0,y:1},{x:-1,y:0},{x:1,y:0}];return t&&(h=h.concat([{x:-1,y:-1},{x:1,y:-1},{x:-1,y:1},{x:1,y:1}])),h.map(c=>new s(n,{x:i+c.x,y:e+c.y}))},p={DEFAULT:(n,t)=>Math.abs(n.position.x-t.position.x)+Math.abs(n.position.y-t.position.y)},f={DEFAULT:(n,t)=>n.equals(t)},d=99999;class x{constructor(t){r(this,"possibleNodes",[]);r(this,"checkedNodes",[]);r(this,"start");r(this,"end");r(this,"iterations");r(this,"config");r(this,"findPath",()=>{for(;this.possibleNodes.length;){if(this.iterations>=this.config.maxIterations)return;const t=this.checkNode();if(t!=null&&t.path)return t.path;this.iterations++}});r(this,"checkNode",()=>{this.possibleNodes.sort((e,h)=>h.f-e.f);const t=this.possibleNodes.pop();if(!t)return;if(this.checkedNodes.push(t),this.config.isDone(t,this.end))return{path:a(t).reverse()};const i=u(t,this.config.diagonal);for(let e of i)this.config.wouldCollide(e)||this.possibleNodes.filter(h=>h.equals(e)).length>0||this.checkedNodes.filter(h=>h.equals(e)).length>0||(e.g=t.g+1,e.h=this.config.heuristic(e,this.end),this.possibleNodes.push(e))});this.config={...t,heuristic:t.heuristic||p.DEFAULT,diagonal:t.diagonal||!1,maxIterations:t.maxIterations||d,isDone:t.isDone||f.DEFAULT},this.iterations=0,this.start=new s(null,t.startPos),this.end=new s(null,t.endPos),this.possibleNodes.push(this.start)}}const y=(...n)=>new x(...n).findPath();o.PathNode=s,o.findPath=y,Object.defineProperty(o,Symbol.toStringTag,{value:"Module"})});
